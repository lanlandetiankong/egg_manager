-各个模块的dubbo.protocol.port都必须不一样
-目前dubbo各个模块的端口规则为
egg-message:30130-30139
egg-message:30120-30129
egg-message:30110-30119
egg-message:30100-30109


dubbo的坑：
-坑！！！=>dubbo 如果传递参数到方法中的修改，不会在消费方同步修改，如果需要同步则将改方法改为返回该对象，如果有多个需要同步修改的，则需要拆分为多个方法。
-如果是spring等框架封装的非pojo类，请重新写一个转化类，不要用作dubbo传输的对象
-service不要有void！！！


20200818
1、负载均衡方式
---random
随机，按权重设置随机概率。
在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较均匀，有利于动态调整提供者权重。
---roundRobin
轮询，按公约后的权重设置轮询比率。
存在慢的提供者类即请求问题，比如：第二台机器很慢，但没挂，当请求调到第二台时就卡在那，久而久之，所有请求都卡在调到第二台上。
---leastActive
最少活跃调用数，相同活跃数的随机，活跃数指调用前后计数差。
使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。
---consistentHash
一致性Hash，相同参数的请求总是发到同一提供者。
当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其他提供者，不会引起剧烈变动。
缺省只对第一个参数Hash，如果要修改，请配置<dubbo:parameter key="hash.arguments" value="0,1" />
缺省用160份虚拟节点，如果要修改，请配置<dubbo:parameter key="hash.nodes" value="320" />
2、dubbo 是提供者，同时也是消费者 -> 取得的service是null
解决方式： dubbo.consumer.lazy=true

