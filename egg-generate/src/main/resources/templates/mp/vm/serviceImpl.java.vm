package ${package.ServiceImpl};

import com.alibaba.dubbo.config.annotation.Reference;
import com.alibaba.dubbo.config.annotation.Service;
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;
import com.baomidou.mybatisplus.mapper.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import org.apache.ibatis.session.RowBounds;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

        }
#else
        @Service(interfaceClass= ${table.serviceName}.class)
        public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}>implements ${table.serviceName} {
        @Autowired
        private RoutineCommonFunc routineCommonFunc;

        @Autowired
        private ${cfg.baseEntityName}Mapper ${cfg.baseEntityName_firstLow}Mapper;


        @Override
        public MyCommonResult<${cfg.baseEntityName}Vo>dealGet${cfg.baseEntityName}Pages(MyCommonResult<${cfg.baseEntityName}Vo>result,List<QueryFormFieldBean>queryFormFieldBeanList,AntdvPaginationBean paginationBean,
        List<AntdvSortBean>sortBeans){
        //解析 搜索条件
        QueryWrapper<${cfg.baseEntityName}> ${cfg.baseEntityName_firstLow}QueryWrapper=new QueryWrapper<${cfg.baseEntityName}>();
        //取得 分页配置
        RowBounds rowBounds=routineCommonFunc.parsePaginationToRowBounds(paginationBean);
        //调用方法将查询条件设置到 ${cfg.baseEntityName_firstLow}QueryWrapper
        super.dealSetConditionsMapToEntityWrapper(${cfg.baseEntityName_firstLow}QueryWrapper,queryFormFieldBeanList);
        //添加排序
        if(sortBeans!=null&&sortBeans.isEmpty()==false){
        for(AntdvSortBean sortBean:sortBeans){
    ${cfg.baseEntityName_firstLow}QueryWrapper.orderBy(sortBean.getField(),sortBean.getOrderIsAsc());
        }
        }
        //取得 总数
        Integer total= ${cfg.baseEntityName_firstLow}Mapper.selectCount(${cfg.baseEntityName_firstLow}QueryWrapper);
        result.settingPage(paginationBean,total);
        List<${cfg.baseEntityName}> ${cfg.baseEntityName_firstLow}s= ${cfg.baseEntityName_firstLow}Mapper.selectPage(rowBounds,${cfg.baseEntityName_firstLow}QueryWrapper);
        result.putResultList(${cfg.baseEntityName}Transfer.transferEntityToVoList(${cfg.baseEntityName_firstLow}s));
        return result;
        }


        @Override
        public MyCommonResult<${cfg.baseEntityName}Vo>dealGet${cfg.baseEntityName}DtoPages(MyCommonResult<${cfg.baseEntityName}Vo>result,List<QueryFormFieldBean>queryFieldBeanList,AntdvPaginationBean paginationBean,
        List<AntdvSortBean>sortBeans){
        Pagination mpPagination=super.dealAntvPageToPagination(paginationBean);
        List<${cfg.baseEntityName}Dto> ${cfg.baseEntityName_firstLow}DtoList= ${cfg.baseEntityName_firstLow}Mapper.selectQueryPage(mpPagination,queryFieldBeanList,sortBeans);
        result.settingPage(paginationBean,mpPagination.getTotal());
        result.putResultList(${cfg.baseEntityName}Transfer.transferDtoToVoList(${cfg.baseEntityName_firstLow}DtoList));
        return result;
        }


        @Transactional(rollbackFor=Exception.class)
        @Override
        public Integer dealAdd${cfg.baseEntityName}(${cfg.baseEntityName}Vo ${cfg.baseEntityName_firstLow}Vo,UserAccount loginUser)throws Exception{
        Date now=new Date();
    ${cfg.baseEntityName} ${cfg.baseEntityName_firstLow} = ${cfg.baseEntityName}Transfer.transferVoToEntity(${cfg.baseEntityName_firstLow}Vo);
    ${cfg.baseEntityName_firstLow}.setFid(MyUUIDUtil.renderSimpleUuid());
    ${cfg.baseEntityName_firstLow}.setState(BaseStateEnum.ENABLED.getValue());
    ${cfg.baseEntityName_firstLow}.setCreateTime(now);
    ${cfg.baseEntityName_firstLow}.setUpdateTime(now);
        if(loginUser!=null){
    ${cfg.baseEntityName_firstLow}.setCreateUserId(loginUser.getFid());
    ${cfg.baseEntityName_firstLow}.setLastModifyerId(loginUser.getFid());
        }
        Integer addCount= ${cfg.baseEntityName_firstLow}Mapper.insert(${cfg.baseEntityName_firstLow});
        return addCount;
        }


        @Transactional(rollbackFor=Exception.class)
        @Override
        public Integer dealUpdate${cfg.baseEntityName}(${cfg.baseEntityName}Vo ${cfg.baseEntityName_firstLow}Vo,UserAccount loginUser)throws Exception{
        Integer changeCount=0;
        Date now=new Date();
    ${cfg.baseEntityName_firstLow}Vo.setUpdateTime(now);
    ${cfg.baseEntityName} ${cfg.baseEntityName_firstLow} = ${cfg.baseEntityName}Transfer.transferVoToEntity(${cfg.baseEntityName_firstLow}Vo);
        if(loginUser!=null){
    ${cfg.baseEntityName_firstLow}.setLastModifyerId(loginUser.getFid());
        }
        changeCount= ${cfg.baseEntityName_firstLow}Mapper.updateById(${cfg.baseEntityName_firstLow});
        return changeCount;
        }



        @Transactional(rollbackFor=Exception.class)
        @Override
        public Integer dealDel${cfg.baseEntityName}(String delId,UserAccount loginUser)throws Exception{
    ${cfg.baseEntityName} ${cfg.baseEntityName_firstLow} = ${cfg.baseEntityName}.builder().fid(delId).state(BaseStateEnum.DISABLED.getValue()).build();
        if(loginUser!=null){
    ${cfg.baseEntityName_firstLow}.setLastModifyerId(loginUser.getFid());
        }
        Integer delCount= ${cfg.baseEntityName_firstLow}Mapper.updateById(${cfg.baseEntityName_firstLow});
        return delCount;
        }
        }
#end
