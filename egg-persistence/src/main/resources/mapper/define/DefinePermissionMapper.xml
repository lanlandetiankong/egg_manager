<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egg.manager.mapper.define.DefinePermissionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.egg.manager.entity.define.DefinePermission">
        <id column="fid" property="fid" />
        <result column="name" property="name" />
        <result column="code" property="code" />
        <result column="type" property="type" />
        <result column="state" property="state" />
        <result column="version" property="version" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_user" property="createUser" />
        <result column="last_modifyer" property="lastModifyer" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        fid, name, code, type, state, version, create_time AS createTime, update_time AS updateTime,create_user AS createUser,last_modifyer AS lastModifyer,remark
    </sql>
    <sql id="Base_Dp_Column_List">
        dp.fid, dp.name, dp.code, dp.type, dp.state, dp.version, dp.create_time AS createTime, dp.update_time AS updateTime,dp.create_user AS createUser,dp.last_modifyer AS lastModifyer,dp.remark
    </sql>


    <update id="batchFakeDelByIds" >
        UPDATE em_define_permission
        SET state = -1
        <if test="loginUser != null">
            ,last_modifyer = #{loginUser.fid}
        </if>
        WHERE fid IN
        <foreach collection="delIds" index="index" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>

    <update id="clearAllPermissionByRoleId" >
        UPDATE em_role_permission
        SET state = -1
        <if test="loginUser != null">
            ,last_modifyer = #{loginUser.fid}
        </if>
        WHERE define_role_id = #{roleId}
    </update>

    <select id="findAllPermissionByRoleId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Dp_Column_List" />
        FROM em_define_permission dp
        left JOIN em_role_permission rp on dp.fid = rp.define_permission_id
        WHERE rp.define_role_id = #{roleId} and rp.state = 1
    </select>

    <select id="findAllPermissionIdByRoleId"  resultType="java.lang.String">
        SELECT dp.fid FROM em_define_permission dp
        left JOIN em_role_permission rp on dp.fid = rp.define_permission_id
        <where>
            and rp.define_role_id = #{roleId}
            <if test="filterEnable == true">
                and rp.state = 1
            </if>
        </where>

    </select>

    <select id="findAllPermissionByUserAcccountId"  resultMap="BaseResultMap">
        SELECT DISTINCT
        <include refid="Base_Dp_Column_List" />
        FROM em_define_permission dp
        left JOIN em_role_permission rp on rp.define_permission_id = dp.fid
        left JOIN em_user_role ur on ur.define_role_id = rp.define_role_id
        WHERE
            ur.user_account_id = #{userAccountId}
            and  dp.state = 1
            and  rp.state = 1
            and  ur.state = 1
    </select>

</mapper>
