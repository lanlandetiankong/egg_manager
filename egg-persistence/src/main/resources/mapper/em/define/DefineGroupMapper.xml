<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egg.manager.persistence.em.define.db.mysql.mapper.DefineGroupMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.egg.manager.persistence.em.define.db.mysql.entity.DefineGroupEntity">
        <id column="fid" property="fid"/>
        <result column="name" property="name"/>
        <result column="pid" property="pid"/>
        <result column="is_inherit" property="isInherit"/>
        <result column="type" property="type"/>
        <result column="remark" property="remark"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="last_modifyer_id" property="lastModifyerId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        fid, name, pid, is_inherit, type,remark, state, create_time, update_time,create_user_id,last_modifyer_id
    </sql>


    <!--
           通用查询结果列(多表查询用)
           需要参数 base_alias_name 本次查询该表的别名
       -->
    <sql id="Base_Alias_Table_List">
        ${base_alias_name}.fid,
        ${base_alias_name}.name,
        ${base_alias_name}.pid,
        ${base_alias_name}.is_inherit,
        ${base_alias_name}.type,

        ${base_alias_name}.remark,
        ${base_alias_name}.state,
        ${base_alias_name}.create_time,
        ${base_alias_name}.update_time,
        ${base_alias_name}.create_user_id,
        ${base_alias_name}.last_modifyer_id
    </sql>

    <!--
            通用查询结果列(多表查询用)
            需要参数 base_alias_name 本次查询该表的别名
            参数 base_alias_col_prefix 本次查询的columnPrefix，便于与 association结合，一般建议该参数以 _ 结尾,适用于 层级关系
        -->
    <sql id="Base_Alias_TableColumn_List">
        ${base_alias_name}.fid AS ${base_alias_col_prefix}fid,
        ${base_alias_name}.name AS ${base_alias_col_prefix}name,
        ${base_alias_name}.pid AS ${base_alias_col_prefix}pid,
        ${base_alias_name}.is_inherit AS ${base_alias_col_prefix}is_inherit,
        ${base_alias_name}.type AS ${base_alias_col_prefix}type,

        ${base_alias_name}.remark AS ${base_alias_col_prefix}remark,
        ${base_alias_name}.state AS ${base_alias_col_prefix}state,
        ${base_alias_name}.create_time AS ${base_alias_col_prefix}create_time,
        ${base_alias_name}.update_time AS ${base_alias_col_prefix}update_time,
        ${base_alias_name}.create_user_id AS ${base_alias_col_prefix}create_user_id,
        ${base_alias_name}.last_modifyer_id AS ${base_alias_col_prefix}last_modifyer_id
    </sql>

    <select id="findAllByUserAcccountId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Alias_Table_List">
            <property name="base_alias_name" value="dg"/>
        </include>
        FROM em_define_group dg
        left JOIN em_user_group ug on dg.fid = ug.define_group_id
        WHERE
        ug.user_account_id = #{userAccountId}
        and ug.is_deleted = #{stateVal}
    </select>

</mapper>
