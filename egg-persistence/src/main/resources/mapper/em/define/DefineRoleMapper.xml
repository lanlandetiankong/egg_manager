<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egg.manager.persistence.em.define.db.mysql.mapper.DefineRoleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.egg.manager.persistence.em.define.db.mysql.entity.DefineRoleEntity">
        <id column="fid" property="fid"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="type" column="type"/>
        <result property="state" column="state"/>
        <result property="remark" column="remark"/>
        <result property="lastModifyerId" column="last_modifyer_id"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="version" column="version"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="deletedTime" column="deleted_time"/>
    </resultMap>

    <!-- 通用Dto查询映射结果 -->
    <resultMap id="DtoResultMap"  extends="BaseResultMap" type="com.egg.manager.persistence.em.define.pojo.dto.DefineRoleDto">
        <association column="create_user_id" property="createUser" fetchType="lazy"
                     select="com.egg.manager.persistence.em.user.db.mysql.mapper.UserAccountMapper.commonSelectUserAccountById"/>
        <association column="last_modifyer_id" property="lastModifyer" fetchType="lazy"
                     select="com.egg.manager.persistence.em.user.db.mysql.mapper.UserAccountMapper.commonSelectUserAccountById"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        fid, name, code, type, state, create_time AS createTime, update_time AS updateTime,create_user_id AS createUserId,last_modifyer_id AS lastModifyerId,remark
    </sql>

    <!--
            通用查询结果列(多表查询用)
            需要参数 base_alias_name 本次查询该表的别名
        -->
    <sql id="Base_Alias_Table_List">
        ${base_alias_name}.fid,
        ${base_alias_name}.name,
        ${base_alias_name}.code,
        ${base_alias_name}.type,
        ${base_alias_name}.remark,
        ${base_alias_name}.state,
        ${base_alias_name}.create_time,
        ${base_alias_name}.update_time,
        ${base_alias_name}.create_user_id,
        ${base_alias_name}.last_modifyer_id
    </sql>


    <!--
            通用查询结果列(多表查询用)
            需要参数 base_alias_name 本次查询该表的别名
            参数 base_alias_col_prefix 本次查询的columnPrefix，便于与 association结合，一般建议该参数以 _ 结尾,适用于 层级关系
        -->
    <sql id="Base_Alias_TableColumn_List">
        ${base_alias_name}.fid AS ${base_alias_col_prefix}fid,
        ${base_alias_name}.name AS ${base_alias_col_prefix}name,
        ${base_alias_name}.code AS ${base_alias_col_prefix}code,
        ${base_alias_name}.type AS ${base_alias_col_prefix}type,

        ${base_alias_name}.remark AS ${base_alias_col_prefix}remark,
        ${base_alias_name}.state AS ${base_alias_col_prefix}state,
        ${base_alias_name}.create_time AS ${base_alias_col_prefix}create_time,
        ${base_alias_name}.update_time AS ${base_alias_col_prefix}update_time,
        ${base_alias_name}.create_user_id AS ${base_alias_col_prefix}create_user_id,
        ${base_alias_name}.last_modifyer_id AS ${base_alias_col_prefix}last_modifyer_id
    </sql>

    <select id="selectQueryPage" resultMap="DtoResultMap">
        SELECT
        <include refid="Base_Alias_Table_List">
            <property name="base_alias_name" value="edr"/>
        </include>
        FROM em_define_role edr
        <where>
            <include
                    refid="com.egg.manager.persistence.exchange.db.mysql.mapper.common.DefaultCommonFuncMapper.Default_Common_QueryPage_Where_Sql">
                <property name="table_name_alias" value="edr"/>
            </include>
        </where>
        <include
                refid="com.egg.manager.persistence.exchange.db.mysql.mapper.common.DefaultCommonFuncMapper.Default_Common_QueryPage_Sort_Sql">
            <property name="table_name_alias" value="edr"/>
        </include>
    </select>

    <select id="findAllRoleByUserAcccountId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Alias_Table_List">
            <property name="base_alias_name" value="dr"/>
        </include>
        FROM em_define_role dr
        left JOIN em_user_role ur on dr.fid = ur.define_role_id
        WHERE
        ur.user_account_id = #{userAccountId}
        and ur.state = #{stateVal}
        and ur.is_deleted = 0
    </select>
</mapper>
