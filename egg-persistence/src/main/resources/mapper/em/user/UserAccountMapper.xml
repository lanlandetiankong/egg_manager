<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egg.manager.persistence.em.user.db.mysql.mapper.UserAccountMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.egg.manager.persistence.em.user.db.mysql.entity.UserAccountEntity">
        <id column="fid" property="fid"/>
        <result property="userName" column="user_name"/>
        <result property="account" column="account"/>
        <result property="nickName" column="nick_name"/>
        <result property="avatarUrl" column="avatar_url"/>
        <result property="password" column="password"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="sex" column="sex"/>
        <result property="userTypeNum" column="user_type_num"/>
        <result property="userType" column="user_type"/>
        <result property="state" column="state"/>
        <result property="remark" column="remark"/>
        <result property="lastModifyerId" column="last_modifyer_id"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="locked" column="locked"/>
        <result property="version" column="version"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="deletedTime" column="deleted_time"/>
    </resultMap>


    <!-- Dto通用查询映射结果 -->
    <resultMap id="DtoResultMap" extends="BaseResultMap"  type="com.egg.manager.persistence.em.user.pojo.dto.UserAccountDto">
        <association column="create_user_id" property="createUser" fetchType="lazy"
                     select="com.egg.manager.persistence.em.user.db.mysql.mapper.UserAccountMapper.commonSelectUserAccountById"/>
        <association column="last_modifyer_id" property="lastModifyer" fetchType="lazy"
                     select="com.egg.manager.persistence.em.user.db.mysql.mapper.UserAccountMapper.commonSelectUserAccountById"/>
        <association column="fid" property="belongTenant" fetchType="lazy"
                     select="com.egg.manager.persistence.em.define.db.mysql.mapper.DefineTenantMapper.selectOneDtoOfUserBelongTenant"/>
        <association column="fid" property="belongDepartment" fetchType="lazy"
                     select="com.egg.manager.persistence.em.define.db.mysql.mapper.DefineDepartmentMapper.selectOneDtoOfUserBelongDepartment"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        fid, user_name,account, nick_name, avatar_url,password, phone, email, sex, user_type,remark, state, create_time, update_time,create_user_id,last_modifyer_id
    </sql>

    <!--
            通用查询结果列(多表查询用)
            需要参数 base_alias_name 本次查询该表的别名
        -->
    <sql id="Base_Alias_Table_List">
        ${base_alias_name}.fid,
        ${base_alias_name}.user_name,
        ${base_alias_name}.account,
        ${base_alias_name}.nick_name,
        ${base_alias_name}.avatar_url,
        ${base_alias_name}.password,
        ${base_alias_name}.phone,
        ${base_alias_name}.email,
        ${base_alias_name}.sex,
        ${base_alias_name}.user_type,
        ${base_alias_name}.remark,
        ${base_alias_name}.state,
        ${base_alias_name}.create_time,
        ${base_alias_name}.update_time,
        ${base_alias_name}.create_user_id,
        ${base_alias_name}.last_modifyer_id
    </sql>

    <!--
            通用查询结果列(多表查询用)
            需要参数 base_alias_name 本次查询该表的别名
            参数 base_alias_col_prefix 本次查询的columnPrefix，便于与 association结合，一般建议该参数以 _ 结尾,适用于 层级关系
        -->
    <sql id="Base_Alias_TableColumn_List">
        ${base_alias_name}.fid AS ${base_alias_col_prefix}fid,
        ${base_alias_name}.user_name AS ${base_alias_col_prefix}user_name,
        ${base_alias_name}.account AS ${base_alias_col_prefix}account,
        ${base_alias_name}.nick_name AS ${base_alias_col_prefix}nick_name,
        ${base_alias_name}.avatar_url AS ${base_alias_col_prefix}avatar_url,
        ${base_alias_name}.password AS ${base_alias_col_prefix}password,
        ${base_alias_name}.phone AS ${base_alias_col_prefix}phone,
        ${base_alias_name}.email AS ${base_alias_col_prefix}email,
        ${base_alias_name}.sex AS ${base_alias_col_prefix}sex,
        ${base_alias_name}.user_type AS ${base_alias_col_prefix}user_type,
        ${base_alias_name}.remark AS ${base_alias_col_prefix}remark,
        ${base_alias_name}.state AS ${base_alias_col_prefix}state,
        ${base_alias_name}.create_time AS ${base_alias_col_prefix}create_time,
        ${base_alias_name}.update_time AS ${base_alias_col_prefix}update_time,
        ${base_alias_name}.create_user_id AS ${base_alias_col_prefix}create_user_id,
        ${base_alias_name}.last_modifyer_id AS ${base_alias_col_prefix}last_modifyer_id
    </sql>


    <!-- 根据用户id查询 用户entity -->
    <select id="commonSelectUserAccountById" parameterType="string" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM em_user_account
        WHERE fid = #{fid}
    </select>


    <select id="selectQueryPage" resultMap="DtoResultMap">
        SELECT
        <include refid="Base_Alias_Table_List">
            <property name="base_alias_name" value="eua"/>
        </include>
        FROM em_user_account eua
        left join em_user_tenant eut
        on eua.fid = eut.user_account_id
        left join em_user_department eud
        on eua.fid = eud.user_account_id
        <where>
            <if test="queryTenantFieldBeanList != null and queryTenantFieldBeanList.size()>0">
                <foreach collection="queryTenantFieldBeanList" index="index" item="item" separator="">
                    <include
                            refid="com.egg.manager.persistence.exchange.db.mysql.mapper.common.DefaultCommonFuncMapper.Default_Common_QueryPage_Where_ForItem_Sql">
                        <property name="table_name_alias" value="eut"/>
                    </include>
                </foreach>
            </if>
            <if test="queryDepartmentFieldBeanList != null and queryDepartmentFieldBeanList.size()>0">
                <foreach collection="queryDepartmentFieldBeanList" index="index" item="item" separator="">
                    <include
                            refid="com.egg.manager.persistence.exchange.db.mysql.mapper.common.DefaultCommonFuncMapper.Default_Common_QueryPage_Where_ForItem_Sql">
                        <property name="table_name_alias" value="eud"/>
                    </include>
                </foreach>
            </if>
            <include
                    refid="com.egg.manager.persistence.exchange.db.mysql.mapper.common.DefaultCommonFuncMapper.Default_Common_QueryPage_Where_Sql">
                <property name="table_name_alias" value="eua"/>
            </include>
        </where>
        <include
                refid="com.egg.manager.persistence.exchange.db.mysql.mapper.common.DefaultCommonFuncMapper.Default_Common_QueryPage_Sort_Sql">
            <property name="table_name_alias" value="eua"/>
        </include>
    </select>

    <update id="batchLockUserByIds">
        UPDATE em_user_account SET locked = #{lockState}
        <if test="loginUser != null">
            ,last_modifyer_id = #{loginUser.fid}
        </if>
        WHERE fid IN
        <foreach collection="lockIds" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>

    <update id="clearAllRoleByUserId">
        UPDATE em_user_role
        SET state = -1
        <if test="loginUser != null">
            ,last_modifyer_id = #{loginUser.fid}
        </if>
        WHERE user_account_id = #{userAccountId}
    </update>


    <update id="clearAllJobByUserId">
        UPDATE em_user_job
        SET state = -1
        <if test="loginUser != null">
            ,last_modifyer_id = #{loginUser.fid}
        </if>
        WHERE user_account_id = #{userAccountId}
    </update>


</mapper>
