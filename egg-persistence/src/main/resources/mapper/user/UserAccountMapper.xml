<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egg.manager.mapper.user.UserAccountMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.egg.manager.entity.user.UserAccount">
        <id column="fid" property="fid" />
        <result column="user_name" property="userName" />
        <result column="account" property="account" />
        <result column="nick_name" property="nickName" />
        <result column="avatar_url" property="avatarUrl" />
        <result column="password" property="password" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="sex" property="sex" />
        <result column="user_type" property="userType" />
        <result column="user_type_num" property="userTypeNum" />
        <result column="state" property="state" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_user_id" property="createUserId" />
        <result column="last_modifyer_id" property="lastModifyerId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        fid, user_name,account, nick_name, avatar_url,password, phone, email, sex, user_type, state, create_time, update_time,create_user_id,last_modifyer_id
    </sql>
    <!-- 字段-驼峰格式化 -->
    <sql id="Base_Hump_Column_List">
        fid, user_name AS userName, account, nick_name AS nickName, avatar_url AS avatarUrl,password, phone, email, sex, user_type AS userType, state, create_time AS createTime, update_time AS updateTime,create_user_id AS createUserId,last_modifyer_id AS lastModifyerId
    </sql>

    <select id="commonSelectUserAccountById" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM em_user_account
        WHERE  fid = #{fid}
     </select>

    <update id="batchFakeDelByIds" >
        UPDATE em_user_account SET  state = -1,last_modifyer_id = #{loginUser.fid}
        WHERE fid IN (
          <foreach collection="delIds" item="item" index="index" separator="," open="(" close=")">
              #{item}
          </foreach>
        )
    </update>
    <update id="batchLockUserByIds" >
        UPDATE em_user_account SET locked = #{lockState}
            <if test="loginUser != null">
                ,last_modifyer_id = #{loginUser.fid}
            </if>
        WHERE fid IN
            <foreach collection="lockIds" item="item" index="index" separator="," open="(" close=")">
                #{item}
            </foreach>
    </update>

    <update id="clearAllRoleByUserId" >
        UPDATE em_user_role
        SET state = -1
            <if test="loginUser != null">
                ,last_modifyer_id = #{loginUser.fid}
            </if>
        WHERE user_account_id = #{userAccountId}
    </update>


    <update id="clearAllJobByUserId">
        UPDATE em_user_job
        SET state = -1
            <if test="loginUser != null">
                ,last_modifyer_id = #{loginUser.fid}
            </if>
        WHERE user_account_id = #{userAccountId}
    </update>


</mapper>
